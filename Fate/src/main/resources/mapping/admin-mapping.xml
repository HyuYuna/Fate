<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminDao">

	<!-- 아이디 중복체크 -->
	 <select id="idCheck" parameterType="String" resultType="Integer">
	 	SELECT
	 		count(*)
		FROM
			USER
		WHERE 
			USER_ID = #{userId}
	 </select>
	 
	 <!-- 사용자 목록 -->
	 <select id="selectUserList" parameterType="userInfoVO" resultType="userInfoVO">
	 	SELECT
	 		ROW_NUMBER() OVER(order by user_id) as rnum ,
	 		a.* ,
	 		B.AUTHORITY ,
	 		(SELECT AUTHORITY_NAME FROM authority WHERE authority= B.AUTHORITY) AS AUTHORITY_NAME
	 	FROM
	 		USER AS A
	 	LEFT JOIN
	 		USER_AUTHORITY as B on a.user_id = b.user_id 
	 	<where>
	 		<if test="searchType=='userId'">
	 			AND a.USER_ID LIKE CONCAT('%',#{keyword},'%')
	 		</if>
	 		<if test="searchType=='userName'">
	 			AND a.USER_NAME LIKE CONCAT('%',#{keyword},'%')
	 		</if>
	 	</where>
	 	ORDER BY rnum 
	 	LIMIT #{startList} , #{listSize}
	 	
	 </select>
	 
	  <!-- 사용자 상세 -->
	 <select id="selectUser" parameterType="String" resultType="userInfoVO">
	 	SELECT
		 	a.* ,
		 	b.authority
	 	FROM
	 		USER as a
	 	INNER JOIN 
	 		USER_AUTHORITY as b ON a.user_id = b.user_id
	 	WHERE
	 		a.USER_ID = #{userId}#
	 </select>
	 
	 <!-- 사용자수 -->
	 <select id="userCnt" parameterType="userInfoVO" resultType="Integer">
	 	SELECT
	 		COUNT(*) as listCnt
	 	FROM
	 		USER
	 	<where>
	 		<if test="searchType=='userId'">
	 			AND USER_ID LIKE CONCAT('%',#{keyword},'%')
	 		</if>
	 		<if test="searchType=='userName'">
	 			AND USER_NAME LIKE CONCAT('%',#{keyword},'%')
	 		</if>
	 	</where>
 	 </select>
	 
	 
	 <!-- 사용자 가입 -->
	<insert id="joinUser" parameterType="userInfoVO">
	 <![CDATA[
		INSERT INTO USER
		(
			USER_ID, 
			PASSWORD, 
			USER_NAME
		) VALUES (
			#{userId},
			#{password}, 
			#{userName}
		) 	
	 ]]>
	 </insert>
	 
	  <!-- 사용자 권한 생성 -->
	<insert id="inserUserAuthority" parameterType="userInfoVO">
	 <![CDATA[
		INSERT INTO USER_AUTHORITY
		(
			USER_ID, 
			AUTHORITY
		) VALUES (
			#{userId},
			#{authority}
		) 	
	 ]]>
	 </insert>
	 
	 <!-- 사용자 수정 -->
	 <update id="updateUser" parameterType="userInfoVO">
	  <![CDATA[
		UPDATE 
			USER
		SET
			USER_ID = #{userId} ,
			PASSWORD = #{password}, 
			USER_NAME = #{userName}
		WHERE
			USER_ID = #{userId}
	 ]]>
	</update>
	
	<!-- 권한 변경(사용자)-->
	 <select id="updateUserAuthority" parameterType="UserInfoVO">
	  <![CDATA[
		UPDATE
			USER_AUTHORITY
		SET
			AUTHORITY = #{authority}
		WHERE
			USER_ID = #{userId}
	 ]]>
	</select>
	
	<!-- 사용자 수정 -->
	 <delete id="deleteUser" parameterType="String">
	  <![CDATA[
		DELETE FROM
			USER
		WHERE
			USER_ID = #{userId}
	 ]]>
	</delete>
	
	 <!-- 권한 목록-->
	 <select id="selectAuthorityList" resultType="authorityVO">
	  <![CDATA[
		SELECT
			*
		FROM
			AUTHORITY
	 ]]>
	</select>
	
	 <!-- 권한 상세-->
	 <select id="selectAuthority" parameterType="Integer" resultType="authorityVO">
	  <![CDATA[
		SELECT
			*
		FROM
			AUTHORITY
		WHERE
			AUTHORITY_IDX = #{idx}
	 ]]>
	</select>
	
	<!-- 권한 등록-->
	<insert id="insertAuthority" parameterType="authorityVO">
	 <![CDATA[
		INSERT INTO AUTHORITY
		(
			AUTHORITY ,
			AUTHORITY_NAME
		) VALUES (
			#{authority} ,
			#{authorityName}
		) 	
	 ]]>
	</insert>	
	
	<!-- 권한 수정-->
	 <select id="updateAuthority" parameterType="authorityVO">
	  <![CDATA[
		UPDATE
			AUTHORITY
		SET
			AUTHORITY = #{authority} ,
			AUTHORITY_NAME = #{authorityName}
		WHERE
			AUTHORITY_IDX = #{authorityIdx}
	 ]]>
	</select>
	
	 <!-- 권한 삭제 -->
	<delete id="deleteAuthority" parameterType="Integer">
	 <![CDATA[
	 	DELETE FROM 
	 		AUTHORITY
	 	WHERE 
	 		AUTHORITY_IDX = #{idx}
	 ]]>
	</delete>

	 <!-- 리소스 목록-->
	 <select id="selectResourceList" resultType="authorityVO">
	  <![CDATA[
		SELECT
			a.* ,
			b.authority
		FROM
			secured_resource as a
		INNER JOIN
			secured_resource_authority as b ON a.resource_idx = b.resource_idx
	 ]]>
	</select>
	
	<!-- 리소스 상세-->
	 <select id="selectResource" parameterType="Integer" resultType="authorityVO">
	  <![CDATA[
		SELECT
			*
		FROM
			secured_resource as a
		LEFT JOIN
			secured_resource_authority as b ON a.resource_idx = b.resource_idx
		WHERE
			a.RESOURCE_IDX = #{idx}
	 ]]>
	</select>
	
	<!-- 리소스 등록-->
	<insert id="insertResource" parameterType="authorityVO">
	 <![CDATA[
		INSERT INTO SECURED_RESOURCE
		(
			RESOURCE_NAME ,
			RESOURCE_PATTERN ,
			SORT_ORDER
		) VALUES (
			#{resourceName} ,
			#{resourcePattern} ,
			#{sortOrder}
		) 	
	 ]]>
		<selectKey keyProperty="resourceIdx" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>	
	
	<!-- 리소스 권한 등록-->
	<insert id="insertResourceAuthority" parameterType="authorityVO">
	 <![CDATA[
		INSERT INTO SECURED_RESOURCE_AUTHORITY
		(
			resource_idx ,
			authority
		) VALUES (
			#{resourceIdx} ,
			#{authority}
		) 	
	 ]]>
	</insert>	
	
	<!-- 리소스 수정-->
	 <select id="updateResource" parameterType="authorityVO">
	  <![CDATA[
		UPDATE
			SECURED_RESOURCE
		SET
			resource_name = #{resourceName} ,
			RESOURCE_PATTERN = #{resourcePattern} ,
			SORT_ORDER = #{sortOrder}
		WHERE
			RESOURCE_IDX = #{resourceIdx}
	 ]]>
	</select>
	
	<!-- 리소스 권한 수정-->
	 <select id="updateResourceAuthority" parameterType="authorityVO">
	  <![CDATA[
		UPDATE
			SECURED_RESOURCE_AUTHORITY
		SET
			AUTHORITY = #{authority}
		WHERE
			RESOURCE_IDX = #{resourceIdx}
	 ]]>
	</select>
	
	 <!-- 리소스 삭제 -->
	<delete id="deleteResource" parameterType="Integer">
	 <![CDATA[
	 	DELETE FROM 
	 		SECURED_RESOURCE
	 	WHERE 
	 		RESOURCE_IDX = #{idx}
	 ]]>
	</delete>
	
	<!-- 리소스 권한 삭제 -->
	<delete id="deleteResourceAuthority" parameterType="Integer">
	 <![CDATA[
	 	DELETE FROM 
	 		SECURED_RESOURCE_AUTHORITY
	 	WHERE 
	 		RESOURCE_IDX = #{idx}
	 ]]>
	</delete>


</mapper>